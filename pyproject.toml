[project]
name = "cinemagoerng"
version = "0.4"
description = "Retrieve data from the IMDb."
readme = "README.md"

authors = [
    {name = "H. Turgut Uyar", email = "uyar@tekir.org"},
    {name = "Mohamed Zumair", email = "mhdzumair@gmail.com"},
    {name = "Davide Alberani", email = "da@mimante.net"},
]
license = {file = "LICENSE.txt"}

keywords = ["imdb", "cinema", "movie", "film", "cast", "actor", "director"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Database :: Front-Ends",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

requires-python = "~=3.10"
dependencies = [
    "typedload~=2.37",
    "lxml~=5.4.0",
    "jmespath~=1.0.1",
]

[dependency-groups]
test = [
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
]
typing = [
    "mypy>=1.15.0",
    "lxml-stubs>=0.5.1",
    "types-jmespath>=1.0.2",
]
style = [
    "ruff>=0.11.10",
]
dev = [
    {include-group = "test"},
    {include-group = "typing"},
    {include-group = "style"},
    "tox-uv>=1.25.0",
]

[project.urls]
repository = "https://github.com/cinemagoer/cinemagoerng"

[project.scripts]
cinemagoerng = "cinemagoerng:cli.main"

[tool.setuptools]
packages = ["cinemagoerng"]
include-package-data = false

[tool.setuptools.package-data]
cinemagoerng = ["specs/*.json"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
source_pkgs = ["cinemagoerng"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.ruff]
line-length = 79

[tool.ruff.lint]
select = ["A", "E", "F", "I", "T", "W"]
ignore = ["E731"]

[tool.ruff.lint.per-file-ignores]
"cli.py" = ["T201"]
"tests/*" = ["E501"]

[tool.ruff.lint.isort]
lines-after-imports = 2

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py3{10,11,12,13}, pypy3{10,11}, types, style
isolated_build = True

[testenv]
runner = uv-venv-lock-runner
package = wheel
wheel_build_env = .pkg
commands =
    pytest

[testenv:coverage]
commands =
    pytest --cov

[testenv:types]
commands =
    mypy cinemagoerng tests

[testenv:style]
commands =
    ruff check --preview cinemagoerng tests
"""

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"
